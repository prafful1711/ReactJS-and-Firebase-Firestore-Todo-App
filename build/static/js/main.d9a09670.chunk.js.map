{"version":3,"sources":["firebase.js","component/Todo.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Fade","React","forwardRef","props","ref","open","in","children","onEnter","onExited","other","style","useSpring","from","opacity","to","onStart","onRest","div","Todo","classes","useState","setOpen","input","setInput","className","ListItem","ListItemText","primary","mytext","todo","secondary","Button","type","onClick","size","variant","color","collection","doc","id","delete","cursor","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","TextField","value","onChange","e","target","placeholder","disabled","set","merge","App","setTodo","console","log","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","label","event","preventDefault","add","timestamp","Date","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9a09670.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseApp = firebase.initializeApp ({\r\n    apiKey: \"AIzaSyAH1MbjZzYDInRNwJGPfkZNggQhxMLimGU\",\r\n    authDomain: \"reactjs-9f1d6.firebaseapp.com\",\r\n    projectId: \"reactjs-9f1d6\",\r\n    storageBucket: \"reactjs-9f1d6.appspot.com\",\r\n    messagingSenderId: \"948723297338\",\r\n    appId: \"1:948723297338:web:ce7b50ab49782c9d575903\",\r\n    measurementId: \"G-1RV31DEZ31\"\r\n  });\r\n\r\n  const db = firebaseApp.firestore();\r\n\r\n  export default db;","import React, {useState} from 'react'\r\nimport {ListItem, ListItemText, Button, TextField} from '@material-ui/core';\r\nimport './Todo.css';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport db from '../firebase';\r\n\r\n// Modal\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { useSpring, animated } from 'react-spring/web.cjs'; \r\n\r\n// Modal View \r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n  \r\n  const Fade = React.forwardRef(function Fade(props, ref) {\r\n    const { in: open, children, onEnter, onExited, ...other } = props;\r\n    const style = useSpring({\r\n      from: { opacity: 0 },\r\n      to: { opacity: open ? 1 : 0 },\r\n      onStart: () => {\r\n        if (open && onEnter) {\r\n          onEnter();\r\n        }\r\n      },\r\n      onRest: () => {\r\n        if (!open && onExited) {\r\n          onExited();\r\n        }\r\n      },\r\n    });\r\n  \r\n    return (\r\n      <animated.div ref={ref} style={style} {...other}>\r\n        {children}\r\n      </animated.div>\r\n    );\r\n  });\r\n  \r\n  Fade.propTypes = {\r\n    children: PropTypes.element,\r\n    in: PropTypes.bool.isRequired,\r\n    onEnter: PropTypes.func,\r\n    onExited: PropTypes.func,\r\n  };\r\n\r\n\r\n  // Todo\r\nconst Todo = (props) => {\r\n\r\n    // for modal call\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n    \r\n    // for update input\r\n    const[input, setInput] = useState('');\r\n\r\n    const handleUpdate = () =>{\r\n        db.collection('todos').doc(props.mytext.id).set({\r\n            todo: input\r\n        }, {merge: true});\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n   \r\n\r\n    // for delete\r\n    const handleDeleteTodo = () => {\r\n        db.collection('todos').doc(props.mytext.id).delete()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"todo-list\">\r\n                <ListItem>\r\n                    <ListItemText\r\n                        primary={props.mytext.todo}\r\n                        /*   primary={props.mytext.todo //props.mytext} */\r\n                        secondary=\"Deadline\"\r\n                    />\r\n                    </ListItem>\r\n                    <div>\r\n                        \r\n                    <Button type=\"button\"  onClick={handleOpen} size=\"small\" variant=\"contained\" color=\"primary\">Edit</Button>\r\n                    \r\n                    </div>\r\n                    <div>\r\n                    <DeleteForeverIcon onClick={handleDeleteTodo} style={{cursor: 'pointer'}} />\r\n                    </div>\r\n\r\n         \r\n      <Modal\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"spring-modal-title\">Update Your Todo</h2>\r\n            <p id=\"spring-modal-description\"><TextField value={input} onChange={e => setInput(e.target.value)}  placeholder={props.mytext.todo}/></p>\r\n         \r\n            <Button type=\"button\" disabled={!input} onClick={handleUpdate} size=\"small\" variant=\"contained\" color=\"primary\">Update</Button>\r\n                    \r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState, useEffect } from 'react'\r\nimport {TextField, Button} from '@material-ui/core';\r\nimport './index.css';\r\nimport Todo from './component/Todo';\r\nimport db from './firebase';\r\nimport firebase from './firebase'\r\n\r\nconst App = () => {\r\n\r\n\r\n    const [todo, setTodo] = useState([]);\r\n    const [input, setInput] = useState('');\r\n\r\n    console.log(todo);\r\n\r\n    // Handle input\r\n    const handleAddTodo = (event) => {\r\n        event.preventDefault();\r\n       \r\n        // add to firebase \r\n\r\n        db.collection('todos').add({\r\n            todo: input,\r\n            timestamp:  new Date()\r\n        })\r\n       \r\n       /*  static todo\r\n       const newTodo = [...todo, input];\r\n        setTodo(newTodo); \r\n        */\r\n\r\n\r\n        setInput('');\r\n    }\r\n\r\n    // Firebase\r\n    useEffect(() => {\r\n        db.collection('todos').orderBy('timestamp', 'asc').onSnapshot(snapshot=>{\r\n            setTodo(snapshot.docs.map(doc=>({id: doc.id, todo: doc.data().todo})))\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className='todo-container'>\r\n               \r\n               <h2 className='title'>Todo App <span>🔥</span></h2>\r\n\r\n               <form className='formArea'>\r\n\r\n                <TextField value={input} onChange={e => setInput(e.target.value)} label=\"✔️ Write your todo\" variant=\"outlined\" />\r\n                &nbsp;&nbsp;\r\n                <Button type=\"submit\" disabled={!input} onClick={handleAddTodo} variant=\"contained\" color=\"secondary\">Add</Button>\r\n               \r\n               </form>\r\n\r\n                {todo.map((todo)=> (\r\n                    <Todo mytext={todo} />\r\n                ))\r\n\r\n                // static data\r\n                 //todo.map(td=><Todo text={td} />)\r\n                }\r\n               \r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}